ril-input {
	border-radius: $r-md;
	color: $main-contrast-800;
	display: flex;
	font-size: $f-size-md;
	line-height: $f-line-md;
	outline: none;
	width: 100%;

	.ril-input-wrap {
		align-items: center;
		background: $main-800;
		border: 1px solid $main-800;
		border-radius: inherit;
		cursor: text;
		display: flex;
		outline: none;
		padding: 0 calc(#{$f-size-md} - 0.2em);
		position: relative;
		transition:
			background 0.2s ease-in-out,
			border 0.2s ease-in-out,
			border 0.2s ease-in-out,
			box-shadow 0.2s ease-in-out,
			color 0.2s ease-in-out;
		will-change: background, border, box-shadow, color;
		width: 100%;

		.input-infix {
			flex: auto;
			min-width: 5px;
		}

		.input-control {
			background: none;
			border: 0;
			border-radius: inherit;
			box-shadow: none;
			color: inherit;
			cursor: inherit;
			display: block;
			font: inherit;
			outline: none;
			padding: $p-sm 0.2em;
			width: 100%;

			// @include placeholder {
			// 	color: $main-contrast-700;
			// }
		}

		.input-prefix,
		.input-suffix {
			color: $main-contrast-800;
			flex: none;
			padding: 0 0.2em;
		}

		.input-icon {
			font-size: 1.3em;
		}

		.char-limiting {
			align-items: center;
			color: $main-contrast-800;
			display: flex;
			font-size: 0.9em;
			justify-content: center;
			padding: 0 0.2em;
			pointer-events: none;
		}
	}

	:host-context(ril-form-group.float) {
		.ka-input-wrap {
			border-color: $main-contrast-700;
		}
	}

	&:hover {
		color: $main-contrast-700;

		.ril-input-wrap {
			background: $main-700;
			border-color: $main-700;
		}
	}

	&.input-focus {
		color: $main-contrast-800;

		.ril-input-wrap {
			background: $main-700;
			border-color: $main-200;
		}
	}

	&.ng-invalid.ng-touched,
	.has-error & {
		.ril-input-wrap {
			background-color: $main-700;
			outline: $error-color solid 1px;
		}
	}

	&.input-disabled,
	&.input-readonly {
		color: $main-contrast-500;

		.ril-input-wrap {
			background-color: $main-500;
			border-color: $main-500;
			box-shadow: none !important;
			cursor: not-allowed;

			.input-control {
				pointer-events: none;
			}
		}
	}
}
