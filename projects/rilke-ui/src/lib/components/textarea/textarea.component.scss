@import '../../../../assets/sass/variables';

$_bg: (
	default: $input-bg-color,
	hover: $input-bg-hover-color,
	focus: $input-bg-color,
	disabled: rgba(230, 230, 230, 0.2)
);
$_border: (
	default: $input-bg-color,
	hover: $input-bg-hover-color,
	focus: $input-border-focus-color,
	disabled: rgba(230, 230, 230, 0.2)
);
$_color: (
	default: $input-color,
	hover: $input-color,
	focus: $input-color,
	disabled: #bdbdbd
);

$_module-rem: $module-rem;
$_placeholder-color: #a8a8a8;
$_border-style: solid;
$_border-width: 1px;
$_fs: 1rem;
$_lh: decimal-round($_module-rem / $_fs * 2);
$_padding-h: $_module-rem * 2;
$_padding-v: $_module-rem * 2;
$_shape: $shape;
$_animation: $animation;
$_shadow-hover: $shadow-hover;
$_min-height: ($_module-rem * 8);

@mixin placeholder {
	::-webkit-input-placeholder {@content}
	:-moz-placeholder           {@content}
	::-moz-placeholder          {@content}
	:-ms-input-placeholder      {@content}
}

:host {
	border-radius: $_shape;
	color: map-get($_color, default);
	display: block;
	font-size: $_fs;
	line-height: $_lh;
	width: 100%;

	.ka-textarea-wrap {
		border-radius: inherit;
		cursor: text;
		height: 100%;
		outline: none;
		padding: 0;
		position: relative;
		width: 100%;

		.textarea-control {
			background: map-get($_bg, default);
			border: $_border-width $_border-style map-get($_border, default);
			border-radius: inherit;
			box-shadow : none;
			color: inherit;
			cursor: inherit;
			display: block;
			font: inherit;
			height: 100%;
			margin: 0;
			outline: none;
			padding: $_padding-v $_padding-h;
			transition:
				background .2s $_animation,
				border .2s $_animation,
				box-shadow .2s $_animation,
				color .2s $_animation;
			width: 100%;

			@include placeholder {
				color: $_placeholder-color;
			}
		}
		.char-limiter {
			color: $_placeholder-color;
			display: flex;
			font-size: .9em;
			justify-content: flex-end;
			margin: 0 -2px;
			pointer-events: none;

			span {
				display: block;
				margin: ($_module-rem / 2) 2px 0;
			}
		}
	}
	&:hover {
		color: map-get($_color, hover);

		.ka-textarea-wrap {
			.textarea-control {
				background: map-get($_bg, hover);
				border-color: map-get($_border, hover);
				box-shadow: $_shadow-hover;
			}
		}
	}
	&.textarea-focus {
		color: map-get($_color, focus);

		.ka-textarea-wrap {
			.textarea-control {
				background: map-get($_bg, focus);
				border-color: map-get($_border, focus);
				box-shadow: $_shadow-hover;
			}
		}
	}
	&.ng-invalid.ng-touched,
	.has-error & {
		.ka-textarea-wrap {
			.textarea-control {
				background-color: rgba($error-color, .1);
				border: 1px solid $error-color;
			}
		}
	}
	&.textarea-disabled,
	&.textarea-readonly {
		color: map-get($_color, disabled);

		.ka-textarea-wrap {
			cursor: not-allowed;

			.textarea-control {
				background-color: map-get($_bg, disabled);
				border-color:  map-get($_border, disabled);
				pointer-events: none;
				box-shadow: none;
			}
		}
	}
	&.textarea-not-resize {
		.ka-textarea-wrap {
			.textarea-control {
				resize: none;
			}
		}
	}

	&.textarea-nostyle {
		background: none !important;
		border: none !important;
		padding-left: 0;

		.ka-textarea-wrap {
			background: none !important;
			border: none !important;
			padding-left: 0;
		}

		textarea {
			box-shadow: none !important;
			background: none !important;
			border: none !important;
			padding-left: 0 !important;
			padding-right: 0 !important;
		}
	}
}
